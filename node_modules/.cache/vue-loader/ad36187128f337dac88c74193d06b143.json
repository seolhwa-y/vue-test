{"remainingRequest":"/Users/shy/vue-workspace/diary2/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/shy/vue-workspace/diary2/src/views/user/SocialLoginModal.vue?vue&type=template&id=7f58546a&scoped=true","dependencies":[{"path":"/Users/shy/vue-workspace/diary2/src/views/user/SocialLoginModal.vue","mtime":1709195906972},{"path":"/Users/shy/vue-workspace/diary2/node_modules/cache-loader/dist/cjs.js","mtime":1709049475848},{"path":"/Users/shy/vue-workspace/diary2/node_modules/babel-loader/lib/index.js","mtime":1709049475445},{"path":"/Users/shy/vue-workspace/diary2/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1709049476369},{"path":"/Users/shy/vue-workspace/diary2/node_modules/cache-loader/dist/cjs.js","mtime":1709049475848},{"path":"/Users/shy/vue-workspace/diary2/node_modules/vue-loader-v16/dist/index.js","mtime":1709049475802}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPGRpdiBjbGFzcz0ibW9kYWwiIHYtaWY9ImlzVmlzaWJsZSI+CiAgICA8ZGl2IGNsYXNzPSJtb2RhbC1jb250ZW50Ij4KICAgICAgPCEtLSDrqqjri6wg64ur6riwIOuyhO2KvCAtLT4KICAgICAgPHNwYW4gY2xhc3M9ImNsb3NlIiBAY2xpY2s9ImhpZGVNb2RhbCI+JnRpbWVzOzwvc3Bhbj4KICAgICAgPCEtLSA8aDI+7IaM7IWcIOuhnOq3uOyduDwvaDI+IC0tPgogICAgICA8IS0tIOyGjOyFnCDroZzqt7jsnbgg67KE7Yq8IOy7qO2FjOydtOuEiCAtLT4KICAgICAgPGRpdiBjbGFzcz0ic29jaWFsLWxvZ2luLWNvbnRhaW5lciI+CiAgICAgICAgPCEtLSDqtazquIAg66Gc6re47J24IOydtOuvuOyngCDrsoTtirwgLS0+CiAgICAgICAgPGltZwogICAgICAgICAgc3JjPSIuLi8uLi9hc3NldHMvZ29vZ2xlX2xvZ2luLnBuZyIKICAgICAgICAgIGFsdD0iR29vZ2xlIOuhnOq3uOyduCIKICAgICAgICAgIEBjbGljaz0iZ29vZ2xlTG9naW4iCiAgICAgICAgICBjbGFzcz0ic29jaWFsLWxvZ2luLWltYWdlIGdvb2dsZSIKICAgICAgICAvPgogICAgICAgIDwhLS0g64Sk7J2067KEIOuhnOq3uOyduCDsnbTrr7jsp4Ag67KE7Yq8IC0tPgogICAgICAgIDxpbWcKICAgICAgICAgIHNyYz0iLi4vLi4vYXNzZXRzL25hdmVyX2xvZ2luLnBuZyIKICAgICAgICAgIGFsdD0iTmF2ZXIg66Gc6re47J24IgogICAgICAgICAgQGNsaWNrPSJuYXZlckxvZ2luIgogICAgICAgICAgY2xhc3M9InNvY2lhbC1sb2dpbi1pbWFnZSBuYXZlciIKICAgICAgICAvPgogICAgICAgIDwhLS0g7Lm07Lm07JikIOuhnOq3uOyduCDsnbTrr7jsp4Ag67KE7Yq8IC0tPgogICAgICAgIDxpbWcKICAgICAgICAgIHNyYz0iLi4vLi4vYXNzZXRzL2tha2FvX2xvZ2luLnBuZyIKICAgICAgICAgIGFsdD0iS2FrYW8g66Gc6re47J24IgogICAgICAgICAgQGNsaWNrPSJrYWthb0xvZ2luIgogICAgICAgICAgY2xhc3M9InNvY2lhbC1sb2dpbi1pbWFnZSBrYWthbyIKICAgICAgICAvPgogICAgICAgIDwhLS0g7LaU6rCA7KCB7J24IOyGjOyFnCDroZzqt7jsnbgg67KE7Yq87J2AIOyXrOq4sOyXkCDrsLDsuZggLS0+CiAgICAgIDwvZGl2PgogICAgPC9kaXY+CiAgPC9kaXY+CiAgPHJlZ2lzdGVyLW1vZGFsIHJlZj0icmVnaXN0ZXJNb2RhbCI+PC9yZWdpc3Rlci1tb2RhbD4K"},{"version":3,"sources":["/Users/shy/vue-workspace/diary2/src/views/user/SocialLoginModal.vue"],"names":[],"mappings":"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","file":"/Users/shy/vue-workspace/diary2/src/views/user/SocialLoginModal.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"modal\" v-if=\"isVisible\">\n    <div class=\"modal-content\">\n      <!-- 모달 닫기 버튼 -->\n      <span class=\"close\" @click=\"hideModal\">&times;</span>\n      <!-- <h2>소셜 로그인</h2> -->\n      <!-- 소셜 로그인 버튼 컨테이너 -->\n      <div class=\"social-login-container\">\n        <!-- 구글 로그인 이미지 버튼 -->\n        <img\n          src=\"../../assets/google_login.png\"\n          alt=\"Google 로그인\"\n          @click=\"googleLogin\"\n          class=\"social-login-image google\"\n        />\n        <!-- 네이버 로그인 이미지 버튼 -->\n        <img\n          src=\"../../assets/naver_login.png\"\n          alt=\"Naver 로그인\"\n          @click=\"naverLogin\"\n          class=\"social-login-image naver\"\n        />\n        <!-- 카카오 로그인 이미지 버튼 -->\n        <img\n          src=\"../../assets/kakao_login.png\"\n          alt=\"Kakao 로그인\"\n          @click=\"kakaoLogin\"\n          class=\"social-login-image kakao\"\n        />\n        <!-- 추가적인 소셜 로그인 버튼은 여기에 배치 -->\n      </div>\n    </div>\n  </div>\n  <register-modal ref=\"registerModal\"></register-modal>\n</template>\n\n<script>\nimport RegisterModal from \"@/views/user/RegisterModal.vue\";\n\nexport default {\n  data() {\n    return {\n      isVisible: false, // 모달의 표시 상태\n      code: \"\",\n      state: \"\",\n    };\n  },\n  components: {\n    RegisterModal,\n  },\n  //네이버 로그인 후 리다이렉트된 페이지에서 실행될 스크립트\n  mounted() {\n    const urlParams = new URLSearchParams(window.location.search);\n    this.code = urlParams.get(\"code\");\n    this.state = urlParams.get(\"state\");\n    console.log(\"인증 코드 전송: \", this.code);\n    console.log(\"인증 상태 전송: \", this.state);\n\n    // window.Kakao.init(\"81900552da7c05acef6a1d7bfc7b42a1\");\n    // console.log(window.Kakao.isInitialized() ? \"초기화 성공\" : \"초기화 실패\");\n\n    // if (!window.Kakao.isInitialized()) {\n    //   window.Kakao.init(\"81900552da7c05acef6a1d7bfc7b42a1\");\n\n    //   if (!window.Kakao.isInitialized()) {\n    //     window.Kakao.init(\"81900552da7c05acef6a1d7bfc7b42a1\");\n    //     console.log(\n    //       window.Kakao.isInitialized() ? \"초기화 성공\" : \"초기화 실패\"\n    //     );\n    //   }\n\n    //   if (this.code && this.state) {\n    //     this.sendCodeToBackend(this.code, this.state);\n    //   }\n    // }\n  },\n  methods: {\n    //카카오 로그인\n    kakaoLogin() {\n      window.Kakao.Auth.login({\n        success: (authObj) => {\n          console.log(\"카카오 로그인 성공\", authObj);\n          // 카카오 로그인 상태를 true로 설정\n          this.$store.commit(\"setKakaoLoggedIn\");\n\n          window.Kakao.API.request({\n            url: \"/v2/user/me\",\n            success: (res) => {\n              console.log(\"사용자 정보 요청 성공\", res);\n              var email = res.kakao_account.email;\n              var name = res.properties.nickname;\n              console.log(\"name : \", name);\n\n              console.log(\"카카오에서 받은 이메일\", email);\n\n              this.axios\n                .get(\"/api/auth/kakao\", {\n                  params: {\n                    email: email,\n                  },\n                })\n                .then((response) => {\n                  console.log(\"백엔드로부터의 응답:\", response);\n                  if (response.data === 0) {\n                    alert(\"회원가입 후 이용해주세요.\");\n                    var kakao = \"Y\";\n\n                    console.log(kakao);\n                    // 회원가입 모달을 표시\n                    this.showRegisterModal(email, name, \"\", \"kakao\"); // 카카오 로그인 정보 전달\n                  } else {\n                    this.$session.set(\"loginType\", \"kakao\");\n                    this.loginWithEmail(email);\n                  }\n                })\n                .catch((error) => {\n                  console.error(\"백엔드 서버 통신 실패:\", error);\n                });\n            },\n            fail: (error) => {\n              console.error(\"사용자 정보 요청 실패\", error);\n            },\n          });\n        },\n        fail: (err) => {\n          console.error(\"카카오 로그인 실패\", err);\n        },\n      });\n    },\n\n    // 구글 로그인\n    googleLogin() {\n      var clientId =\n        \"791029232576-26va45aofidk8vio4pfee8ashalguil3.apps.googleusercontent.com\"; // 구글 클라이언트 ID\n      var redirectUri = \"http://localhost:8080\"; // 구글에서 인증 후 리다이렉트할 URI\n      var scope = \"email profile\"; // 요청할 권한 범위\n      var responseType = \"code\"; // 응답 타입\n\n      // 구글 OAuth2 인증 URL 구성\n      var authUrl = `https://accounts.google.com/o/oauth2/v2/auth?client_id=${clientId}&redirect_uri=${redirectUri}&response_type=${responseType}&scope=${scope}`;\n\n      // 사용자를 인증 URL로 리다이렉트\n      window.location.href = authUrl;\n\n      console.log(window.location.href);\n    },\n\n    // 네이버 로그인을 위한 URL로 리다이렉트하는 메소드\n    naverLogin() {\n      console.log(\"네이버 로그인 버튼이 클릭되었습니다.\");\n      const naverClientId = \"lOlSYvpZSiJZtjXKIs4v\";\n      const redirectURI = encodeURIComponent(\"http://localhost:8080\");\n      const state = \"RANDOM_STATE_STRING\";\n      const naverLoginURL = `https://nid.naver.com/oauth2.0/authorize?response_type=code&client_id=${naverClientId}&redirect_uri=${redirectURI}&state=${state}`;\n      console.log(\"네이버 로그인 URL:\", naverLoginURL);\n      window.location.href = naverLoginURL;\n    },\n    // 네이버 로그인\n    sendCodeToBackend(code, state) {\n      // axios를 사용하여 백엔드로 코드와 상태 전송\n\n      console.log(\"@@@@@@@@@@@@-->\", code);\n      console.log(\"@@@@@@@@@@@@-->\", state);\n\n      // let params = {\n      //   code: code,\n      //   state: state,\n      // };\n\n      // console.log(\"@#$%@#@#\", params);\n\n      this.axios\n        .get(\"/api/auth/naver\", { params: { code: code, state: state } })\n        .then((response) => {\n          // 인증 성공 처리\n          console.log(\"인증 성공\", response.data.login_result);\n          // 네이버 로그인 상태를 true로 설정\n          this.$store.commit(\"setNaverLoggedIn\");\n          if (response.data.login_result === 0) {\n            alert(\"화원가입 후 이용해주세요\");\n            // 모달에 이름과 전화번호를 설정하고 표시\n\n            var email = response.data.email;\n            var name = response.data.name;\n            var phoneNumber = response.data.mobile;\n            // 카카오 로그인 정보 전달\n            this.showRegisterModal(email, name, phoneNumber, \"naver\"); // 카카오 로그인 정보 전달\n          } else {\n            // 회원가입이 필요 없는 경우 (즉, 이미 회원인 경우)\n            // 휴대폰 번호로 회원 정보 조회 및 로그인 처리\n            //const phoneNumber = response.data.mobile.replace(/-/g, \"\"); // 하이픈 제거\n            //이메일을 이용해서 사용자 정보 확인\n            this.$session.set(\"loginType\", \"naver\");\n            const email = response.data.email;\n            this.loginWithEmail(email);\n          }\n        })\n        .catch((error) => {\n          // 에러 처리\n          console.error(\"인증 에러\", error);\n        });\n    },\n\n    // 이메일 로그인 처리하는 메소드\n    loginWithEmail(email) {\n      this.axios.post(\"/api/login\", { email }).then((loginResponse) => {\n        console.log(\"loginResponse : \", loginResponse);\n        if (loginResponse.status == 200) {\n          // loginproc.do\n          this.axios\n            .post(\n              \"/loginProc.do\",\n              new URLSearchParams({\n                lgn_Id: loginResponse.data.loginID,\n                pwd: loginResponse.data.password,\n              })\n            )\n            .then((resp) => {\n              let data = resp.data;\n              console.log(\"data : \", data);\n              if (data.result == \"SUCCESS\") {\n                this.$store.commit(\"logged\", {\n                  loginId: data.loginId,\n                  userNm: data.userNm,\n                  userType: data.userType,\n                  serverName: data.serverName,\n                  usrMnuAtrt: data.usrMnuAtrt,\n                });\n                this.$store.commit(\"auth\", { type: data.userType });\n\n                // guide for making vue files\n                data.usrMnuAtrt.forEach(function (item) {\n                  console.log(item.mnu_nm);\n                  item.nodeList.forEach(function (item) {\n                    let purl = item.mnu_url.replace(\".do\", \".vue\");\n                    let vueFilePath = \"@/views\" + purl;\n                    console.log(\n                      \"  메뉴명: \" +\n                        item.mnu_nm +\n                        \" || 파일경로 : \" +\n                        vueFilePath\n                    );\n                  });\n                });\n                ////////////////////////////////\n\n                this.$router.push(\"/dashboard/home\");\n              } else {\n                if (data.resultMsg.indexOf(\"회원가입\") > -1)\n                  alert(data.resultMsg);\n                else alert(\"ID 혹은 비밀번호가 틀립니다\");\n              }\n            })\n            .catch((error) => {\n              console.log(error);\n            });\n        }\n      });\n    },\n\n    // 모달 표시 메서드\n    showRegisterModal(\n      email = \"\",\n      name = \"\",\n      phoneNumber = \"\",\n      socialType = \"\"\n    ) {\n      if (this.$refs.registerModal) {\n        this.$refs.registerModal.userForm.email = email;\n        this.$refs.registerModal.userForm.name = name;\n        this.$refs.registerModal.userForm.phoneNumber = phoneNumber.replace(\n          /-/g,\n          \"\"\n        );\n        // 각 소셜 로그인 타입에 따라 \"Y\" 값을 설정\n        if (socialType === \"kakao\") {\n          this.$refs.registerModal.userForm.kakao = \"Y\";\n        } else if (socialType === \"naver\") {\n          this.$refs.registerModal.userForm.naver = \"Y\";\n        } else if (socialType === \"google\") {\n          this.$refs.registerModal.userForm.google = \"Y\";\n        }\n        this.$refs.registerModal.showModal();\n      }\n    },\n\n    showModal() {\n      this.isVisible = true;\n    },\n    hideModal() {\n      this.isVisible = false;\n    },\n  },\n};\n</script>\n\n<style scoped>\n.social-login-container {\n  display: flex;\n  justify-content: space-around;\n  width: 100%;\n  /* 버튼을 수평적으로 배치 */\n}\n\n.social-login-image {\n  width: 30%; /* 필요에 따라 크기 조정을 위한 너비 */\n  cursor: pointer;\n  transition: transform 0.3s ease;\n  /* 호버 시 약간 확대되는 효과 */\n}\n\n.social-login-image:hover {\n  transform: scale(1.05); /* 호버 시 이미지 확대 */\n}\n\n/* 소셜 로그인 버튼 호버 효과 */\n.social-login-button:hover {\n  opacity: 0.9; /* 버튼 호버 시 약간 투명하게 */\n}\n.modal {\n  position: fixed; /* 모달을 화면에 고정 */\n  left: 0;\n  top: 0;\n  width: 100%; /* 전체 너비 */\n  height: 100%; /* 전체 높이 */\n  background-color: rgba(0, 0, 0, 0.5); /* 반투명 배경 */\n  display: flex;\n  justify-content: center; /* 가운데 정렬 */\n  align-items: center; /* 중앙 정렬 */\n  z-index: 1000; /* 다른 요소 위에 표시 */\n}\n\n.modal-content {\n  background-color: #fff; /* 배경색 */\n  padding: 20px; /* 패딩 */\n  border-radius: 10px; /* 모서리 둥글게 */\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* 그림자 효과 */\n  width: 500px; /* 너비 */\n  max-width: 80%; /* 최대 너비 */\n  animation: modalOpen 0.5s ease; /* 애니메이션 효과 */\n}\n\n@keyframes modalOpen {\n  from {\n    opacity: 0; /* 처음에는 투명 */\n    transform: translateY(-50px); /* 위에서 아래로 약간 이동 */\n  }\n  to {\n    opacity: 1; /* 최종적으로 불투명 */\n    transform: translateY(0); /* 원래 위치로 */\n  }\n}\n\n.close {\n  float: right; /* 오른쪽 상단에 위치 */\n  font-size: 25px; /* 크기 */\n  font-weight: bold;\n  cursor: pointer; /* 마우스 오버 시 커서 변경 */\n  margin-left: 90%;\n}\n\n.close:hover {\n  color: red; /* 호버 시 색상 변경 */\n}\n</style>\n"]}]}