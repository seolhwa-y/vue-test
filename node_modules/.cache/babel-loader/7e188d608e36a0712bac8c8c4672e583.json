{"remainingRequest":"/Users/shy/vue-workspace/vue-test/node_modules/babel-loader/lib/index.js!/Users/shy/vue-workspace/vue-test/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/shy/vue-workspace/vue-test/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/shy/vue-workspace/vue-test/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/shy/vue-workspace/vue-test/src/views/user/RegisterModal.vue?vue&type=template&id=fc176a00&scoped=true","dependencies":[{"path":"/Users/shy/vue-workspace/vue-test/src/views/user/RegisterModal.vue","mtime":1709046461707},{"path":"/Users/shy/vue-workspace/vue-test/node_modules/cache-loader/dist/cjs.js","mtime":1709209744883},{"path":"/Users/shy/vue-workspace/vue-test/node_modules/babel-loader/lib/index.js","mtime":1709209746638},{"path":"/Users/shy/vue-workspace/vue-test/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1709209747380},{"path":"/Users/shy/vue-workspace/vue-test/node_modules/cache-loader/dist/cjs.js","mtime":1709209744883},{"path":"/Users/shy/vue-workspace/vue-test/node_modules/vue-loader-v16/dist/index.js","mtime":1709209746250}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["class","_createElementVNode","for","type","$data","isVisible","_createElementBlock","_hoisted_1","_hoisted_2","onClick","_cache","args","$options","hideModal","_hoisted_3","_createCommentVNode","onSubmit","_withModifiers","registerUser","_hoisted_4","_hoisted_5","id","name","userForm","loginID","$event","required","userIdDuplicateCheckMessage","_normalizeClass","isUserIdDuplicate","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","email","emailDuplicateCheckMessage","isEmailDuplicate","_hoisted_10","_hoisted_11","password","_hoisted_12","_hoisted_13","hp","placeholder","maxlength","requestVerificationCode","verificationRequested","hpError","_hoisted_14","_toDisplayString","_hoisted_15","_hoisted_16","naver","_hoisted_17","_hoisted_18","google","_hoisted_19","_hoisted_20","kakao","_hoisted_21","_hoisted_22","verificationCode","onInput","verifyCodeInput","codeVerificationMessage","messageClass","_hoisted_23"],"sources":["/Users/shy/vue-workspace/vue-test/src/views/user/RegisterModal.vue"],"sourcesContent":["<template>\n  <div class=\"modal\" v-if=\"isVisible\">\n    <div class=\"modal-content\">\n      <span class=\"close\" @click=\"hideModal\">&times;</span>\n      <h1>회원가입</h1>\n      <!-- 회원가입 양식 -->\n      <form @submit.prevent=\"registerUser\">\n        <div class=\"form-group\">\n          <label for=\"loginID\">사용자ID</label>\n          <input\n            type=\"text\"\n            id=\"loginID\"\n            name=\"loginID\"\n            v-model=\"userForm.loginID\"\n            required\n          />\n          <!-- 사용자ID 중복 확인 메시지 -->\n          <p\n            v-if=\"userIdDuplicateCheckMessage\"\n            :class=\"{\n              'error-message': isUserIdDuplicate,\n              'success-message': !isUserIdDuplicate,\n            }\"\n          >\n            {{ userIdDuplicateCheckMessage }}\n          </p>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"name\">이름</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            name=\"name\"\n            v-model=\"userForm.name\"\n            required\n          />\n          <div class=\"form-group\">\n            <label for=\"email\">이메일</label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              name=\"email\"\n              v-model=\"userForm.email\"\n              required\n            />\n            <!-- 이메일 중복 검사 메시지 표시 -->\n            <p\n              v-if=\"emailDuplicateCheckMessage\"\n              :class=\"{\n                'error-message': isEmailDuplicate,\n                'success-message': !isEmailDuplicate,\n              }\"\n            >\n              {{ emailDuplicateCheckMessage }}\n            </p>\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"password\">비밀번호</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            v-model=\"userForm.password\"\n            required\n          />\n        </div>\n\n        <!-- 연락처 입력 필드 -->\n        <div class=\"form-group\">\n          <label for=\"hp\">연락처</label>\n          <input\n            type=\"text\"\n            id=\"hp\"\n            name=\"hp\"\n            v-model=\"userForm.hp\"\n            placeholder=\"'-' 생략하고 입력\"\n            required\n            maxlength=\"11\"\n          />\n          <!-- 에러 메시지가 있을 경우 표시 -->\n          <!-- 인증 코드를 요청하는 버튼 -->\n          <button @click.prevent=\"requestVerificationCode\">\n            {{ verificationRequested ? \"다시보내기\" : \"인증 코드 보내기\" }}\n          </button>\n          <p v-if=\"hpError\" class=\"error-message\">{{ hpError }}</p>\n        </div>\n\n        <!-- 소셜로그인 구분 -->\n        <div class=\"form-group\" v-show=\"false\">\n          <label for=\"naver\">네이버</label>\n          <input v-model=\"userForm.naver\" />\n        </div>\n        <div class=\"form-group\" v-show=\"false\">\n          <label for=\"google\">구글</label>\n          <input v-model=\"userForm.google\" />\n        </div>\n        <div class=\"form-group\" v-show=\"false\">\n          <label for=\"kakao\">카카오</label>\n          <input v-model=\"userForm.kakao\" />\n        </div>\n\n        <!-- 인증 코드 입력 필드, verificationRequested가 true일 때만 표시됩니다. -->\n        <div class=\"form-group\" v-if=\"verificationRequested\">\n          <label for=\"verificationCode\">인증 코드</label>\n          <input\n            type=\"text\"\n            id=\"verificationCode\"\n            name=\"verificationCode\"\n            v-model=\"verificationCode\"\n            required\n            @input=\"verifyCodeInput\"\n            maxlength=\"6\"\n          />\n          <p v-if=\"codeVerificationMessage\" :class=\"messageClass\">\n            {{ codeVerificationMessage }}\n          </p>\n        </div>\n\n        <button type=\"submit\">회원가입</button>\n      </form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  data() {\n    return {\n      isVisible: false,\n      verificationRequested: false, // 인증 코드 요청 상태를 관리하는 플래그\n      verificationCode: \"\", // 사용자가 입력한 인증 코드\n      correctVerificationCode: \"\", // 서버로부터 받은 인증 코드를 저장할 변수\n      hpError: null, // 에러 메시지 초기화\n      codeVerificationMessage: \"\", // 인증 코드 검증 결과 메시지\n      messageClass: \"\",\n      verificationCodeTimeout: null, // 인증번호 만료 타이머 ID\n      isUserIdDuplicate: false, //중복검사 상태\n      userIdDuplicateCheckMessage: \"\", //중복검사 메세지\n      emailDuplicateCheckMessage: \"\", // 이메일 중복 검사 결과 메시지\n      isEmailDuplicate: false, // 이메일 중복 여부\n      emailFormatValid: true, // 이메일 형식 유효성 상태\n      // 폼 데이터를 위한 데이터 모델 추가\n      userForm: {\n        loginID: \"\",\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        hp: \"\",\n        naver: \"N\",\n        google: \"N\",\n        kakao: \"N\",\n      },\n      props: {\n        name: String,\n        ph: String,\n        naver: String,\n        google: String,\n        kakao: String,\n      },\n    };\n  },\n  // 아이디 중복 확인 로직\n  watch: {\n    \"userForm.loginID\": function (newValue) {\n      this.checkUserIdDuplicate(newValue);\n    },\n    \"userForm.email\"(newValue) {\n      this.checkEmailDuplicate(newValue);\n    },\n  },\n  methods: {\n    showModal() {\n      this.isVisible = true;\n    },\n    hideModal() {\n      this.isVisible = false;\n\n      // 모든 사용자 입력 데이터 초기화\n      this.userForm = {\n        loginID: \"\",\n        name: \"\",\n        password: \"\",\n        hp: \"\",\n        email: \"\",\n        naver: \"N\",\n        google: \"N\",\n        kakao: \"N\",\n      };\n\n      // 모든 상태 초기화\n      this.verificationRequested = false;\n      this.verificationCode = \"\";\n      this.correctVerificationCode = \"\";\n      this.hpError = null;\n      this.codeVerificationMessage = \"\";\n      this.messageClass = \"\";\n\n      // 타이머 관련 상태 초기화\n      clearTimeout(this.verificationCodeTimeout); // 기존 타이머 취소\n      this.verificationCodeTimeout = null;\n      this.timer = null;\n    },\n    //아이디 중복 검사\n    checkUserIdDuplicate(loginID) {\n      console.log(\"입력한 값 : \", loginID);\n      if (!loginID.trim()) {\n        this.userIdDuplicateCheckMessage = \"\";\n        return;\n      }\n      // 여기에 사용자 ID 중복 확인 API 요청 로직 구현\n      axios\n        .post(\"/api/checkID\", { loginID })\n\n        .then((response) => {\n          console.log(\"받은 값 : \", response.data);\n          if (response.data === 1) {\n            this.isUserIdDuplicate = true;\n            this.userIdDuplicateCheckMessage = \"이미 사용 중인 아이디입니다.\";\n          } else {\n            this.isUserIdDuplicate = false;\n            this.userIdDuplicateCheckMessage = \"사용 가능한 아이디입니다.\";\n          }\n        })\n        .catch((error) => {\n          console.error(\"아이디 중복 확인 중 오류 발생:\", error);\n        });\n    },\n    // 이메일 형식 검증\n    validateEmailFormat(email) {\n      const pattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      this.emailFormatValid = pattern.test(email);\n      return this.emailFormatValid; // 이메일 형식이 유효한지 여부 반환\n    },\n    // 이메일 중복 검사\n    checkEmailDuplicate(email) {\n      // 입력값이 비었을 경우 메시지를 초기화하고 함수를 종료한다.\n      if (!email.trim()) {\n        this.isEmailDuplicate = false; // 중복 상태 초기화\n        this.emailDuplicateCheckMessage = \"\"; // 메시지 초기화\n        return; // 함수 종료\n      }\n\n      // 이메일 형식 검증\n      if (!this.validateEmailFormat(email)) {\n        this.isEmailDuplicate = true;\n        this.emailDuplicateCheckMessage = \"유효하지 않은 이메일 형식입니다.\";\n        return; // 이메일 형식이 유효하지 않으면 중복 검사를 수행하지 않는다.\n      }\n\n      // 이메일 형식이 유효하면 중복 검사를 수행한다.\n      axios\n        .post(\"/api/checkEmail\", { email: email })\n        .then((response) => {\n          // 중복 검사 결과 처리\n          if (response.data) {\n            this.isEmailDuplicate = true;\n            this.emailDuplicateCheckMessage = \"이미 사용 중인 이메일입니다.\";\n          } else {\n            this.isEmailDuplicate = false;\n            this.emailDuplicateCheckMessage = \"사용 가능한 이메일입니다.\";\n          }\n        })\n        .catch((error) => {\n          console.error(\"이메일 중복 확인 중 오류 발생:\", error);\n          this.emailDuplicateCheckMessage = \"중복 검사 중 오류가 발생했습니다.\";\n        });\n    },\n\n    // 휴대폰 인증\n    requestVerificationCode() {\n      // 연락처 입력값이 11자리인지 확인\n      if (this.userForm.hp.length !== 11) {\n        this.hpError = \"*연락처는 11자리여야 합니다.*\";\n        return; // 여기서 함수 종료\n      }\n\n      // 휴대폰 번호 중복 검사 로직 구현\n      axios\n        .post(\"/api/checkHp\", { hp: this.userForm.hp })\n        .then((response) => {\n          // 중복 검사 결과에 따라 처리\n          if (response.data >= 1) {\n            // 중복된 경우 에러 메시지 설정 및 인증번호 요청 중단\n            this.hpError = \"이미 사용 중인 휴대폰 번호입니다.\";\n          } else {\n            // 중복되지 않은 경우 인증번호 요청 로직 수행\n            this.sendVerificationCode();\n          }\n        })\n        .catch((error) => {\n          console.error(\"휴대폰 번호 중복 확인 중 오류 발생:\", error);\n        });\n    },\n\n    // 인증번호 요청 로직을 별도의 메서드로 분리\n    sendVerificationCode() {\n      // 기존 인증번호와 관련된 상태 초기화\n      this.hpError = null; // 에러 메시지 초기화\n      this.verificationRequested = true; // 버튼 텍스트 변경\n      this.verificationCode = \"\"; // 사용자 입력 인증번호 초기화\n      this.codeVerificationMessage = \"\"; // 인증번호 검증 메시지 초기화\n      this.messageClass = \"\"; // 메시지 클래스 초기화\n\n      // 기존 타이머가 있다면 취소\n      clearTimeout(this.verificationCodeTimeout);\n      // 인증 코드 요청 로직\n      axios\n        .post(\"/api/sendSMS\", this.userForm)\n        .then((response) => {\n          console.log(response.data);\n          this.correctVerificationCode = response.data; // 서버로부터 받은 인증 코드 저장\n          this.setVerificationCodeTimeout(); // 인증번호 만료 타이머 설정\n        })\n        .catch((error) => {\n          console.error(\"인증번호 요청 중 오류 발생:\", error);\n        });\n    },\n\n    // 인증번호 만료 타이머 설정 메서드\n    setVerificationCodeTimeout() {\n      this.verificationCodeTimeout = setTimeout(() => {\n        alert(\"인증번호가 만료되었습니다.\");\n        this.correctVerificationCode = \"\"; // 인증번호 만료\n        if (this.verificationCode) {\n          // 기존에 인증번호가 입력되어 있으면\n          this.codeVerificationMessage =\n            \"인증번호가 만료되었습니다. 다시 요청해주세요.\";\n          this.messageClass = \"error-message\";\n        }\n      }, 10000); // 10초 후 만료\n    },\n    verifyCodeInput() {\n      if (!this.correctVerificationCode) {\n        // 만료된 경우\n        this.codeVerificationMessage =\n          \"인증번호가 만료되었습니다. 다시 요청해주세요.\";\n        this.messageClass = \"error-message\";\n        return; // 처리 종료\n      }\n      // 사용자 입력과 정확한 인증 코드가 모두 비어있지 않은 경우에만 검증 로직을 수행\n      if (this.verificationCode && this.correctVerificationCode) {\n        console.log(\"내가 입력한 코드 : \", this.verificationCode);\n        console.log(\"인증 코드 : \", this.correctVerificationCode);\n\n        const inputCode = String(this.verificationCode).trim();\n        const correctCode = String(this.correctVerificationCode).trim();\n\n        if (inputCode.length !== 6) {\n          // 인증 코드 길이가 6자리가 아니면 에러 메시지를 표시\n          this.codeVerificationMessage = \"인증 코드는 6자리여야 합니다.\";\n          this.messageClass = \"error-message\";\n        } else if (inputCode !== correctCode) {\n          // 인증 코드가 일치하지 않으면 에러 메시지를 표시\n          this.codeVerificationMessage = \"인증 코드가 일치하지 않습니다.\";\n          this.messageClass = \"error-message\";\n        } else {\n          // 인증 코드가 일치하면 성공 메시지를 표시\n          this.codeVerificationMessage = \"인증 코드가 일치합니다.\";\n          this.messageClass = \"success-message\";\n        }\n      } else {\n        // 인증 코드 입력이 시작되지 않았거나 입력이 비어 있는 경우 메시지와 클래스를 초기화\n        this.codeVerificationMessage = \"\";\n        this.messageClass = \"\";\n      }\n    },\n\n    registerUser() {\n      // 아이디 중복 검사\n      if (this.isUserIdDuplicate) {\n        alert(\"이미 사용 중인 아이디입니다. 다른 아이디를 입력해주세요.\");\n        return; // 중복 아이디가 있으므로 회원가입 로직 중단\n      }\n      if (this.codeVerificationMessage != \"인증 코드가 일치합니다.\") {\n        alert(\"휴대폰 인증을 해주세요.\");\n        return; // 회원가입 로직 중단\n      }\n\n      // 회원가입 로직\n      axios\n        .post(\"/api/register\", this.userForm)\n        .then((response) => {\n          console.log(response.data);\n          // 회원 가입 성공 시 대시보드 홈으로 리다이렉트\n          this.$router.push(\"/\");\n          this.hideModal();\n        })\n        .catch((error) => {\n          console.error(\"회원가입 에러:\", error.response);\n        });\n    },\n  },\n};\n</script>\n\n<style scoped>\n.success-message {\n  color: green; /* 성공 메시지 색상 */\n}\n.error-message {\n  color: red; /* 에러 메시지 색상 */\n}\nh1 {\n  font-size: 2.5rem; /* 크기 */\n  color: #333; /* 색상 */\n  text-align: center; /* 중앙 정렬 */\n  text-transform: uppercase; /* 대문자 */\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2); /* 텍스트 그림자 */\n  margin-top: 0; /* 상단 여백 */\n  margin-bottom: 1rem; /* 하단 여백 */\n  padding: 0.5rem; /* 패딩 */\n  background-color: #f8f9fa; /* 배경 색상 */\n  border-radius: 10px; /* 모서리 둥글게 */\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* 박스 그림자 */\n  display: inline-block; /* 내용의 너비만큼 크기 조정 */\n  width: auto; /* 자동 너비 */\n  max-width: 100%; /* 최대 너비 설정 */\n}\n\n.modal {\n  position: fixed; /* 모달을 화면에 고정 */\n  left: 0;\n  top: 0;\n  width: 100%; /* 전체 너비 */\n  height: 100%; /* 전체 높이 */\n  background-color: rgba(0, 0, 0, 0.5); /* 반투명 배경 */\n  display: flex;\n  justify-content: center; /* 가운데 정렬 */\n  align-items: center; /* 중앙 정렬 */\n  z-index: 1000; /* 다른 요소 위에 표시 */\n}\n\n.modal-content {\n  background-color: #fff; /* 배경색 */\n  padding: 20px; /* 패딩 */\n  border-radius: 10px; /* 모서리 둥글게 */\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* 그림자 효과 */\n  width: 500px; /* 너비 */\n  max-width: 80%; /* 최대 너비 */\n  animation: modalOpen 0.5s ease; /* 애니메이션 효과 */\n}\n\n@keyframes modalOpen {\n  from {\n    opacity: 0; /* 처음에는 투명 */\n    transform: translateY(-50px); /* 위에서 아래로 약간 이동 */\n  }\n  to {\n    opacity: 1; /* 최종적으로 불투명 */\n    transform: translateY(0); /* 원래 위치로 */\n  }\n}\n\n.close {\n  float: right; /* 오른쪽 상단에 위치 */\n  font-size: 25px; /* 크기 */\n  font-weight: bold;\n  cursor: pointer; /* 마우스 오버 시 커서 변경 */\n  margin-left: 90%;\n}\n\n.close:hover {\n  color: red; /* 호버 시 색상 변경 */\n}\n\n/* 입력 필드 스타일 */\ninput[type=\"email\"],\ninput[type=\"text\"],\ninput[type=\"password\"] {\n  width: calc(100% - 20px); /* 전체 너비에서 패딩 제외 */\n  padding: 10px;\n  margin-bottom: 15px; /* 마진 */\n  border: 1px solid #ccc; /* 테두리 */\n  border-radius: 5px; /* 모서리 둥글게 */\n}\n\n/* 버튼 스타일 */\nbutton {\n  width: 100%; /* 전체 너비 */\n  padding: 10px 20px;\n  background-color: #007bff; /* 배경색 */\n  color: #fff; /* 글자색 */\n  border: none;\n  border-radius: 5px; /* 모서리 둥글게 */\n  cursor: pointer; /* 마우스 오버 시 커서 변경 */\n}\n\nbutton:hover {\n  background-color: #0056b3; /* 호버 시 배경색 변경 */\n}\n</style>\n"],"mappings":"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"}]}