{"remainingRequest":"/Users/shy/vue-workspace/vue-test/node_modules/thread-loader/dist/cjs.js!/Users/shy/vue-workspace/vue-test/node_modules/babel-loader/lib/index.js!/Users/shy/vue-workspace/vue-test/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/shy/vue-workspace/vue-test/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/shy/vue-workspace/vue-test/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/shy/vue-workspace/vue-test/src/views/user/RegisterModal.vue?vue&type=template&id=ea7f656a&scoped=true","dependencies":[{"path":"/Users/shy/vue-workspace/vue-test/src/views/user/RegisterModal.vue","mtime":1709046461707},{"path":"/Users/shy/vue-workspace/vue-test/node_modules/cache-loader/dist/cjs.js","mtime":1709209744883},{"path":"/Users/shy/vue-workspace/vue-test/node_modules/thread-loader/dist/cjs.js","mtime":1709209745992},{"path":"/Users/shy/vue-workspace/vue-test/node_modules/babel-loader/lib/index.js","mtime":1709209746638},{"path":"/Users/shy/vue-workspace/vue-test/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1709209747380},{"path":"/Users/shy/vue-workspace/vue-test/node_modules/cache-loader/dist/cjs.js","mtime":1709209744883},{"path":"/Users/shy/vue-workspace/vue-test/node_modules/vue-loader-v16/dist/index.js","mtime":1709209746250}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}